---
import { getPosts } from '../../services/posts';
import instagramLogo from '@assets/images/instagram.png';

const posts = await getPosts();

const instaPost = posts
  .filter((post) => post.sections.includes('instagram'))
  .slice(0, 6)
  .sort((a, b) => b.order - a.order);
---

<section>
  <header class="flex flex-col items-center justify-center gap-8">
    <img
      class="object-contain"
      src={instagramLogo.src}
      width={350}
      height={100}
      alt="Publicaciones de Instagram"
    />
    <h2 class="text-3xl">Ãšltimas publicaciones</h2>
  </header>

  <div class="w-11/12 max-w-[1600px] mx-auto pt-12">
    <div
      id="image-list"
      class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8"
    >
      {
        instaPost.map((post) => (
          <a
            href={`${post.slug}`}
            target="_blank"
            rel="nofollow noopener"
            class="relative mx-auto max-w-[300px] h-[300px] lg:max-w-none group overflow-hidden"
          >
            <img
              class="h-full w-full object-contain"
              src={`${post.image}`}
              alt={`${post.id}`}
            />
            <div class="absolute inset-0 bg-black opacity-0 group-hover:opacity-80 duration-1000 transform translate-y-full group-hover:translate-y-[80%] transition-transform">
              <p class="text-white text-center mt-2">
                {post.content.slice(0, 100)}
              </p>
            </div>
          </a>
        ))
      }
    </div>
  </div>
</section>

<style is:inline>
  .image-list {
    scrollbar-width: none;
  }

  .image-list::-webkit-scrollbar {
    display: none;
  }

  @media (max-width: 1023px) {
    .slide-button {
      display: none !important;
    }
  }
</style>
<script>
  const imageList = document.querySelector('#image-list');

  const slideButtons = document.querySelectorAll<HTMLElement>('.slide-button');
  const sliderScrollbar = document.getElementById('slider-scrollbar');
  const scrollbarThumb = document.getElementById(
    'scrollbar-thumb'
  ) as HTMLElement;
  const maxScrollLeft = imageList.scrollWidth - imageList.clientWidth;

  scrollbarThumb.addEventListener('mousedown', (e) => {
    const startX = e.clientX;
    const thumbPosition = scrollbarThumb.offsetLeft;

    // Update thumb position on mouse move
    const handleMouseMove = (e) => {
      const deltaX = e.clientX - startX;
      const newThumbPosition = thumbPosition + deltaX;
      const maxThumbPosition =
        sliderScrollbar.getBoundingClientRect().width -
        scrollbarThumb.offsetWidth;

      const boundedPosition = Math.max(
        0,
        Math.min(maxThumbPosition, newThumbPosition)
      );
      const scrollPosition =
        (boundedPosition / maxThumbPosition) * maxScrollLeft;
      scrollbarThumb.style.left = `${boundedPosition}px`;
      imageList.scrollLeft = scrollPosition;
    };

    // Remove eventListeners on mouse up
    const handleMouseUp = () => {
      document.removeEventListener('mousemove', handleMouseMove);
      document.removeEventListener('mouseup', handleMouseUp);
    };
    document.addEventListener('mousemove', handleMouseMove);
    document.addEventListener('mouseup', handleMouseUp);
  });

  // Slide images according to the slide buttons click
  slideButtons.forEach((button) => {
    button.addEventListener('click', () => {
      const direction = button.id === 'prev-slide' ? -1 : +1;
      const scrollAmount = imageList.clientWidth * direction;
      imageList.scrollBy({ left: scrollAmount, behavior: 'smooth' });
    });
  });

  const handleSlideButtons = () => {
    slideButtons[0].style.display =
      imageList.scrollLeft <= 0 ? 'none' : 'block';
    slideButtons[1].style.display =
      imageList.scrollLeft >= maxScrollLeft ? 'none' : 'block';
  };

  // Uupdate scollbar thumb position based on image scroll
  const updateScrollThumbPosition = () => {
    const scrollPosition = imageList.scrollLeft;
    const thumbPosition =
      (scrollPosition / maxScrollLeft) *
      (sliderScrollbar.clientWidth - scrollbarThumb.offsetWidth);
    scrollbarThumb.style.left = `${thumbPosition}px`;
  };

  imageList.addEventListener('scroll', () => {
    handleSlideButtons();
    updateScrollThumbPosition();
  });
</script>
